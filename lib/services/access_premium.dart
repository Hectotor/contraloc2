import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';

class AccessPremium {
  /// V√©rifie si l'utilisateur (ou son administrateur) a un abonnement premium
  static Future<bool> isPremiumUser() async {
    try {
      print('üîÑ V√©rification du statut premium');
      
      // V√©rifier si l'utilisateur est connect√©
      final user = FirebaseAuth.instance.currentUser;
      if (user == null) {
        print('‚ùå Aucun utilisateur connect√©');
        return false;
      }

      final uid = user.uid;
      print('‚úÖ Utilisateur connect√©: $uid');

      // R√©cup√©rer d'abord les informations sur l'utilisateur pour savoir s'il est collaborateur
      final userDocRef = FirebaseFirestore.instance.collection('users').doc(uid);
      final userDoc = await userDocRef.get(GetOptions(source: Source.server));
      
      if (!userDoc.exists || userDoc.data() == null) {
        print('‚ùå Document utilisateur non trouv√©');
        return false;
      }
      
      final userData = userDoc.data()!;
      
      // V√©rifier si c'est un collaborateur
      if (userData['role'] == 'collaborateur') {
        final adminId = userData['adminId'] as String?;
        if (adminId == null) {
          print('‚ùå AdminId non trouv√© pour le collaborateur');
          return false;
        }
        
        print('üë• Collaborateur d√©tect√© - V√©rification du statut premium de l\'admin: $adminId');
        
        // V√©rifier l'authentification de l'administrateur
        final adminAuthDocRef = FirebaseFirestore.instance
            .collection('users')
            .doc(adminId)
            .collection('authentification')
            .doc(adminId);
        
        // Utiliser Source.server pour √©viter les probl√®mes de cache
        final adminAuthDoc = await adminAuthDocRef.get(GetOptions(source: Source.server));
        
        if (!adminAuthDoc.exists) {
          print('‚ùå Document auth admin non trouv√©');
          return false;
        }
        
        return _checkPremiumStatus(adminAuthDoc.data());
      } else {
        // C'est un administrateur, v√©rifier directement son statut premium
        final authDocRef = FirebaseFirestore.instance
            .collection('users')
            .doc(uid)
            .collection('authentification')
            .doc(uid);
        
        final authDoc = await authDocRef.get(GetOptions(source: Source.server));
        
        if (authDoc.exists) {
          return _checkPremiumStatus(authDoc.data());
        }
      }
      
      print('‚ùå Aucun statut premium trouv√©');
      print('flutter: _isPremiumUser d√©fini √†: false');
      return false;
    } catch (e) {
      print('‚ùå Erreur lors de la v√©rification du statut premium: $e');
      return false;
    }
  }
  
  /// V√©rifie le statut premium √† partir des donn√©es d'authentification
  static bool _checkPremiumStatus(Map<String, dynamic>? authData) {
    if (authData == null) {
      print('‚ùå Donn√©es auth null');
      return false;
    }

    // V√©rifier tous les champs possibles pour premium et platinum
    final subscriptionId = authData['subscriptionId'] ?? 'free';
    final cbSubscription = authData['cb_subscription'] ?? 'free';
    final stripePlanType = authData['stripePlanType'] ?? 'free';
    
    print('üìä Valeurs d\'abonnement trouv√©es: subscriptionId=$subscriptionId, cbSubscription=$cbSubscription, stripePlanType=$stripePlanType');
    
    bool isPremium = false;
    String? reason;
    
    if (subscriptionId.toString().contains('premium') || subscriptionId.toString().contains('platinum')) {
      isPremium = true;
      reason = '‚úÖ Statut premium trouv√© dans subscriptionId: $subscriptionId';
    } else if (cbSubscription.toString().contains('premium') || cbSubscription.toString().contains('platinum')) {
      isPremium = true;
      reason = '‚úÖ Statut premium trouv√© dans cb_subscription: $cbSubscription';
    } else if (stripePlanType.toString().contains('premium') || stripePlanType.toString().contains('platinum')) {
      isPremium = true;
      reason = '‚úÖ Statut premium trouv√© dans stripePlanType: $stripePlanType';
    } else {
      reason = '‚ùå Aucun statut premium trouv√©';
    }
    
    print(reason);
    print('flutter: _isPremiumUser d√©fini √†: $isPremium');
    return isPremium;
  }
}
